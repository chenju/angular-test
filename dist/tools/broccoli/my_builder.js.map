{"version":3,"sources":["broccoli/my_builder.ts"],"names":["MyBuilder","MyBuilder.constructor","MyBuilder.rebuildBrowserDevTree","MyBuilder.rebuildBrowserProdTree","MyBuilder.makeBrowserDevBuilder","MyBuilder.makeBrowserProdBuilder","MyBuilder.rebuild"],"mappings":"AAAA,IAAI,QAAQ,GAAG,OAAO,CAAC,UAAU,CAAC,CAAC;AACnC,IAAI,GAAG,GAAG,OAAO,CAAC,UAAU,CAAC,CAAC;AAC9B,IAAI,eAAe,GAAG,OAAO,CAAC,sBAAsB,CAAC,CAAC;AACtD,IAAI,cAAc,GAAG,OAAO,CAAC,qBAAqB,CAAC,CAAC;AAEpD;IAEIA,mBAAoBA,UAAkBA;QAAlBC,eAAUA,GAAVA,UAAUA,CAAQA;IAAGA,CAACA;IAKnCD,yCAAqBA,GAA5BA;QACIE,IAAIA,CAACA,iBAAiBA,GAAGA,IAAIA,CAACA,iBAAiBA,IAAIA,IAAIA,CAACA,qBAAqBA,EAAEA,CAACA;QAChFA,MAAMA,CAACA,IAAIA,CAACA,OAAOA,CAACA,IAAIA,CAACA,iBAAiBA,CAACA,CAACA;IAChDA,CAACA;IAGMF,0CAAsBA,GAA7BA;QACIG,IAAIA,CAACA,kBAAkBA,GAAGA,IAAIA,CAACA,kBAAkBA,IAAIA,IAAIA,CAACA,sBAAsBA,EAAEA,CAACA;QACnFA,MAAMA,CAACA,IAAIA,CAACA,OAAOA,CAACA,IAAIA,CAACA,kBAAkBA,CAACA,CAACA;IACjDA,CAACA;IAEOH,yCAAqBA,GAA7BA;QACII,IAAIA,IAAIA,GAAGA,eAAeA,CAACA;YACnBA,IAAIA,EAAEA,KAAKA;YACXA,cAAcA,EAAEA,IAAIA;SACvBA,EACDA,IAAIA,CAACA,IAAIA,CAACA,IAAIA,CAACA,UAAUA,EAAEA,IAAIA,EAAEA,KAAKA,CAACA,CAACA,CAACA;QAC7CA,MAAMA,CAACA,IAAIA,QAAQA,CAACA,OAAOA,CAACA,IAAIA,CAACA,CAACA;IACtCA,CAACA;IAGOJ,0CAAsBA,GAA9BA;QACIK,IAAIA,IAAIA,GAAGA,eAAeA,CAACA;YACnBA,IAAIA,EAAEA,MAAMA;YACZA,cAAcA,EAAEA,KAAKA;SACxBA,EACDA,IAAIA,CAACA,IAAIA,CAACA,IAAIA,CAACA,UAAUA,EAAEA,IAAIA,EAAEA,MAAMA,CAACA,CAACA,CAACA;QAC9CA,MAAMA,CAACA,IAAIA,QAAQA,CAACA,OAAOA,CAACA,IAAIA,CAACA,CAACA;IACtCA,CAACA;IAEOL,2BAAOA,GAAfA,UAAgBA,OAAOA;QACnBM,MAAMA,CAACA,OAAOA,CAACA,KAAKA,EAAEA;aACjBA,IAAIA,CAACA,UAACA,MAAMA;YACTA,cAAcA,CAACA,MAAMA,CAACA,KAAKA,CAACA,CAACA;QACjCA,CAACA,CAACA;aACDA,KAAKA,CAACA,UAACA,GAAGA;YACPA,OAAOA,CAACA,KAAKA,CAACA,GAAGA,CAACA,QAAQA,EAAEA,CAACA,CAACA;YAC9BA,AACAA,2CAD2CA;YAC3CA,EAAEA,CAACA,CAACA,GAAGA,CAACA,IAAIA,CAACA,CAACA,CAACA;gBACXA,OAAOA,CAACA,KAAKA,CAACA,QAAQA,GAAGA,GAAGA,CAACA,IAAIA,CAACA,CAACA;YACvCA,CAACA;YACDA,EAAEA,CAACA,CAACA,GAAGA,CAACA,KAAKA,CAACA,CAACA,CAACA;gBACZA,OAAOA,CAACA,KAAKA,CAACA,GAAGA,CAACA,KAAKA,CAACA,CAACA;YAC7BA,CAACA;YACDA,MAAMA,GAAGA,CAACA;QACdA,CAACA,CAACA,CAACA;IACXA,CAACA;IACLN,gBAACA;AAADA,CAtDA,AAsDCA,IAAA;AAtDY,iBAAS,YAsDrB,CAAA","file":"broccoli/my_builder.js","sourcesContent":["var broccoli = require('broccoli');\r\nvar fse = require('fs-extra');\r\nvar makeBrowserTree = require('./trees/browser_tree');\r\nvar printSlowTrees = require('broccoli-slow-trees');\r\n\r\nexport class MyBuilder {\r\n\r\n    constructor(private outputPath: string) {}\r\n    private browserDevBuilder: BroccoliBuilder;\r\n    private browserProdBuilder: BroccoliBuilder;\r\n\r\n\r\n    public rebuildBrowserDevTree(): Promise < BuildResult > {\r\n        this.browserDevBuilder = this.browserDevBuilder || this.makeBrowserDevBuilder();\r\n        return this.rebuild(this.browserDevBuilder);\r\n    }\r\n\r\n\r\n    public rebuildBrowserProdTree(): Promise < BuildResult > {\r\n        this.browserProdBuilder = this.browserProdBuilder || this.makeBrowserProdBuilder();\r\n        return this.rebuild(this.browserProdBuilder);\r\n    }\r\n\r\n    private makeBrowserDevBuilder(): BroccoliBuilder {\r\n        let tree = makeBrowserTree({\r\n                name: 'dev',\r\n                typeAssertions: true\r\n            },\r\n            path.join(this.outputPath, 'js', 'dev'));\r\n        return new broccoli.Builder(tree);\r\n    }\r\n\r\n\r\n    private makeBrowserProdBuilder(): BroccoliBuilder {\r\n        let tree = makeBrowserTree({\r\n                name: 'prod',\r\n                typeAssertions: false\r\n            },\r\n            path.join(this.outputPath, 'js', 'prod'));\r\n        return new broccoli.Builder(tree);\r\n    }\r\n\r\n    private rebuild(builder) {\r\n        return builder.build()\r\n            .then((result) => {\r\n                printSlowTrees(result.graph);\r\n            })\r\n            .catch((err) => {\r\n                console.error(err.toString());\r\n                // Should show file and line/col if present\r\n                if (err.file) {\r\n                    console.error('File: ' + err.file);\r\n                }\r\n                if (err.stack) {\r\n                    console.error(err.stack);\r\n                }\r\n                throw err;\r\n            });\r\n    }\r\n}\r\n"],"sourceRoot":"/source/"}